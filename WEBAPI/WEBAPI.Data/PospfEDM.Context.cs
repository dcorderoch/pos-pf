//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WEBAPI.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PospfEntities : DbContext
    {
        public PospfEntities()
            : base("name=PospfEntities")
        {
            this.Configuration.LazyLoadingEnabled = false;
            this.Configuration.ProxyCreationEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BranchOffice> BranchOffices { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ProductInSale> ProductInSales { get; set; }
        public virtual DbSet<Sale> Sales { get; set; }
        public virtual DbSet<Staff> Staffs { get; set; }
        public virtual DbSet<Staff_Log> Staff_Log { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
    
        public virtual int ENDSALE(Nullable<long> saleID)
        {
            var saleIDParameter = saleID.HasValue ?
                new ObjectParameter("SaleID", saleID) :
                new ObjectParameter("SaleID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ENDSALE", saleIDParameter);
        }
    
        public virtual int ENDSHIFT(Nullable<long> staffLogID, Nullable<int> moneyOnEnd)
        {
            var staffLogIDParameter = staffLogID.HasValue ?
                new ObjectParameter("StaffLogID", staffLogID) :
                new ObjectParameter("StaffLogID", typeof(long));
    
            var moneyOnEndParameter = moneyOnEnd.HasValue ?
                new ObjectParameter("MoneyOnEnd", moneyOnEnd) :
                new ObjectParameter("MoneyOnEnd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ENDSHIFT", staffLogIDParameter, moneyOnEndParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> STARTSALE(string customerID, Nullable<int> cashierID, Nullable<byte> officeID)
        {
            var customerIDParameter = customerID != null ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(string));
    
            var cashierIDParameter = cashierID.HasValue ?
                new ObjectParameter("CashierID", cashierID) :
                new ObjectParameter("CashierID", typeof(int));
    
            var officeIDParameter = officeID.HasValue ?
                new ObjectParameter("OfficeID", officeID) :
                new ObjectParameter("OfficeID", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("STARTSALE", customerIDParameter, cashierIDParameter, officeIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> STARTSHIFT(Nullable<int> staffID, Nullable<int> register, Nullable<int> moneyOnShiftStart)
        {
            var staffIDParameter = staffID.HasValue ?
                new ObjectParameter("StaffID", staffID) :
                new ObjectParameter("StaffID", typeof(int));
    
            var registerParameter = register.HasValue ?
                new ObjectParameter("Register", register) :
                new ObjectParameter("Register", typeof(int));
    
            var moneyOnShiftStartParameter = moneyOnShiftStart.HasValue ?
                new ObjectParameter("MoneyOnShiftStart", moneyOnShiftStart) :
                new ObjectParameter("MoneyOnShiftStart", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("STARTSHIFT", staffIDParameter, registerParameter, moneyOnShiftStartParameter);
        }
    }
}
